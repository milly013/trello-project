version: '3.8'

services:
  project-service:
    build:
      context: ./project-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=project-service-db
      - PORT=8081
      - CORS_ALLOWED_ORIGINS=http://localhost:4200
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - app-network

  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=task-service-db
      - PORT=8082
      - CORS_ALLOWED_ORIGINS=http://localhost:4200
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://mongodb:27017
      - MONGODB_DATABASE=user-service-db
      - PORT=8080
      - CORS_ALLOWED_ORIGINS=http://localhost:4200
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - project-service
      - task-service
      - user-service
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
